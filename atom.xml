<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nko-y的个人主页</title>
  
  
  <link href="https://nko-y.github.io/atom.xml" rel="self"/>
  
  <link href="https://nko-y.github.io/"/>
  <updated>2024-07-14T08:10:16.236Z</updated>
  <id>https://nko-y.github.io/</id>
  
  <author>
    <name>nko-y</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>anim01</title>
    <link href="https://nko-y.github.io/2024/07/03/anim01/"/>
    <id>https://nko-y.github.io/2024/07/03/anim01/</id>
    <published>2024-07-03T06:11:18.000Z</published>
    <updated>2024-07-14T08:10:16.236Z</updated>
    
    
    
    
    
    <category term="动画" scheme="https://nko-y.github.io/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>anim02</title>
    <link href="https://nko-y.github.io/2024/07/02/anim02/"/>
    <id>https://nko-y.github.io/2024/07/02/anim02/</id>
    <published>2024-07-02T06:23:15.000Z</published>
    <updated>2024-07-14T06:33:10.857Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>anim03</title>
    <link href="https://nko-y.github.io/2024/07/01/anim03/"/>
    <id>https://nko-y.github.io/2024/07/01/anim03/</id>
    <published>2024-07-01T06:23:22.000Z</published>
    <updated>2024-07-14T06:33:15.687Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>【渲染】基于蒙特卡洛光线追踪的渲染器</title>
    <link href="https://nko-y.github.io/2024/06/19/render01/"/>
    <id>https://nko-y.github.io/2024/06/19/render01/</id>
    <published>2024-06-19T06:11:28.000Z</published>
    <updated>2024-07-14T08:12:59.754Z</updated>
    
    <content type="html"><![CDATA[<p>使用蒙特卡洛方法实现路径追踪算法，构建BVH树作为空间加速结构，支持场景导入(.obj+.xml)，实现Blinn-Phong BRDF材质模型并支持简单折射</p><h2 id="一、结果展示">一、结果展示</h2><p>（1）cornell-box：用于显示diffuse材质的效果</p><img src="\img\cornell-box\cornell-box_spp4096.jpg" alt="cornell-box_spp4096" style="zoom:100%;" /><p>（2）staircase：用于展示glass材质+diffuse材质</p><img src="\img\stairscase\stairscase_spp4096.jpg" alt="stairscase_spp4096" style="zoom:100%;" /><p>（3）veach-mis：用于展示diffuse+specular材质</p><img src="\img\veach-mis\veach-mis_spp4096.jpg" alt="veach-mis_spp4096" style="zoom:100%;" /><p>（4）living-room：其他大场景</p><img src="\img\LivingRoom\living_room_spp2048.jpg" alt="living_room_spp2048" style="zoom:100%;" /><h2 id="二、运行及说明">二、运行及说明</h2><p>代码仓库：<a href="https://github.com/nko-y/SimpleMCPT">https://github.com/nko-y/SimpleMCPT</a></p><p>（1）本程序所使用的所有外部库均包含于include文件夹下，包括以下几部分：</p><ul><li>glm：用于基本的数学和向量运算</li><li>stb_image/stb_image_write：用于纹理图片的读取以及最终图像的输出</li><li>tiny_obj_loader：用于模型的导入</li><li>tinyxml2：用于xml图像的读取</li></ul><p>（2）本项目的运行方式有两种：</p><ul><li>打开PT.sln项目，并将项目的包含目录添加到其中，在main函数中可以改变spp数量以及对应场景的存放路径</li></ul><img src="\img\vsrun.png" alt="vsrun" style="zoom:40%;" /><ul><li>通过生成的PT.exe直接运行，如下所示打开控制台调用exe并输入图像路径和spp数量即可</li></ul><img src="\img\cmdrun.png" alt="cmdrun" style="zoom:50%;" /><p>（3）注意事项：</p><ul><li>场景相关资源(mtl、obj、xml)应当与文件名相同，从而保证程序能够正确读取有关资源</li></ul><img src="\img\sourcename.png" alt="sourcename" style="zoom:50%;" /><ul><li>将材质中的Tr改成Kt，只有这样tiny_obj_loader才能正确地读入玻璃的transmission属性</li></ul><h2 id="三、整体思路和类实现">三、整体思路和类实现</h2><p>（1）首先要做的是场景的导入，其中的核心有四个部分：模型点面法线信息、模型材质信息、光源信息、相机信息。在SceneLoader的构造函数中我们通过路径名解析出资源名称，并依次实现这些信息的读取，对应的伪代码如下所示：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读入obj mtl xml文件</span></span><br><span class="line">tinyobj::<span class="built_in">LoadObj</span>(&amp;attrib, &amp;shapes, &amp;materials, &amp;warn, &amp;err, scene_path, mtl_path);</span><br><span class="line">xml_loader.<span class="built_in">LoadFile</span>(xml_path);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读入光源信息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> node = xml_loader.<span class="built_in">FirstChildElement</span>(<span class="string">&quot;light&quot;</span>); node!=<span class="literal">nullptr</span>; node = node-&gt;<span class="built_in">NextSiblingElement</span>(<span class="string">&quot;light&quot;</span>))&#123;</span><br><span class="line">    std::string light_name = node-&gt;<span class="built_in">Attribute</span>(<span class="string">&quot;mtlname&quot;</span>);</span><br><span class="line">std::string light_radiance_string = node-&gt;<span class="built_in">Attribute</span>(<span class="string">&quot;radiance&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读入材质信息</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> mtl : materials) &#123;</span><br><span class="line">    <span class="keyword">if</span>(mtl.ior&gt;<span class="number">1.0</span>) this_mtl = <span class="keyword">new</span> <span class="built_in">GlassMaterial</span>();</span><br><span class="line">    <span class="keyword">else</span> this_mtl = <span class="keyword">new</span> <span class="built_in">PhongMaterial</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(light_node.<span class="built_in">count</span>(mtl.name)&gt;<span class="number">0</span>) this_mtl-&gt;<span class="built_in">SetEmissive</span>();</span><br><span class="line">    <span class="keyword">if</span>(mtl.diffuse_texname.<span class="built_in">length</span>()&gt;<span class="number">0</span>) this_mtl-&gt;<span class="built_in">ReadTexture</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读入模型几何信息</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">size_t</span> s=<span class="number">0</span>; s&lt;shapes.<span class="built_in">size</span>(); s++)&#123;</span><br><span class="line">    <span class="built_in">GetPoints</span>();</span><br><span class="line">    <span class="built_in">GetNormal</span>();</span><br><span class="line">    <span class="built_in">GetUV</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读入相机信息</span></span><br><span class="line"><span class="keyword">auto</span> camera_node = xml_loader.<span class="built_in">FirstChildElement</span>(<span class="string">&quot;camera&quot;</span>);</span><br><span class="line"><span class="built_in">GetCameraInfo</span>(&amp;eye, &amp;lookat, &amp;up, &amp;fov, &amp;width, &amp;height);</span><br></pre></td></tr></table></figure><p>（2）在读入以上场景时我们需要构建对应的类存储对应的信息，主要包括：</p><ul><li>材质：<ul><li>Materia基类，定义了材质的属性(Phong、Glass、Light)以及与蒙特卡洛重要性采样相关的pdf、bsdf、scatter函数</li><li>PhongMaterial类，为Material的一个子类，代表使用Phong模型计算的材质，如果指定了is_emissive则代表该材质是光源材质</li><li>GlassMaterial类，为Material的一个子类，代表玻璃等可以投射的材质</li><li>Texture类，用于存储纹理图片并通过Get(vec2&amp; uv)可以获得纹理图片上一点的材质信息</li></ul></li><li>物体：<ul><li>Hittable类，代表了该几何的碰撞属性，定义了hit函数用于求交计算和GetBoundingBox用于获取包围盒</li><li>BoundingBox类，用于表示该几何体的AABB包围盒属性</li><li>Emittable类，代表了该几何的发光属性，定义了SampleRay用于光线的采样</li><li>Triangle类，继承于Hittable类和Emittable类代表三角面片的几何体，新的几何体可以用类似方法定义</li><li>EmittableCluster类，继承于Emittable代表发光物体的集合体</li></ul></li><li>相机：<ul><li>Camera类，记录了读入的所有相机参数，并提前计算图像左上角的世界坐标以及横向移动的世界长度dw与纵向移动的世界长度dh，通过CastRay函数给定像素坐标即可向世界发射对应的光线进行求交运算。</li></ul></li></ul><p>（3）为了将物体有条理地组织起来，我们构造了BVH树结构，他是Hittable类的一个子类。对应的伪代码和构建遍历思路如下所示：</p><ul><li>BuildTree。构建这颗树的基本思路是传入所有空间物体(在这里是三角形)，将所有物体的AABB包围盒合并起来形成一个总的包围盒，选取包围盒最长的轴进行分裂，这里的分裂可以先将所有物体在这个轴上的最小坐标值进行排序。简单的做法是均分，将左半边的物体传入左儿子递归构建树结构，右半边的物体传入右儿子递归构建树结构。也可以从光线射入包围盒命中的概率出发使用SAH BVH的方法，均匀划分n个剖分点，分别计算每个点光线击中包围盒的概率即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>a</mi><mo>+</mo><mfrac><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>b</mi></mrow><annotation encoding="application/x-tex">c(A,B)=\frac{S(A)}{S(C)}a+\frac{S(B)}{S(C)}b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">A</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">b</span></span></span></span> 这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>S</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mi>S</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(A)S(B)S(C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>分别代表左半边的包围盒表面积、右半边的包围盒表面积、父节点包围盒表面积，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">ab</span></span></span></span>则代表左右半边图元的数量，我们选择计算出的值最大的那个点作为左右儿子的剖分点，这样可以保证更高的求交效率。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Hittable* <span class="title">BuildTree</span><span class="params">(vector&lt;Hittable*&gt;all, <span class="type">int</span> from, <span class="type">int</span> to)</span></span>&#123;</span><br><span class="line">    <span class="comment">//遍历结束返回叶子节点</span></span><br><span class="line">    <span class="keyword">if</span>(to&lt;=from) <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">    <span class="keyword">if</span>(to-from==<span class="number">1</span>) <span class="keyword">return</span> all[from];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//构建父节点包围盒并选出最长轴</span></span><br><span class="line">    BoundingBox* C = <span class="keyword">new</span> <span class="built_in">Boundingbox</span>(all, from, to);</span><br><span class="line">    <span class="type">int</span> max_axis = <span class="built_in">SortMaxAxis</span>(C);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//以最长轴进行排序</span></span><br><span class="line">    std::<span class="built_in">sort</span>(all.<span class="built_in">begin</span>()+from, all.<span class="built_in">begin</span>()+to, comp_fun);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用简单的二分或者SAH选择出划分点并构建子节点</span></span><br><span class="line">    <span class="type">int</span> idx = <span class="built_in">GetDivideIndex</span>(all, from, to);</span><br><span class="line">    node-&gt;child[<span class="number">0</span>] = <span class="built_in">BuildTree</span>(all, from, idx);</span><br><span class="line">    node-&gt;child[<span class="number">1</span>] = <span class="built_in">BuildTree</span>(all, idx, to);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Hit。当检测一条光线与场景相交的时候，我们自上而下遍历整棵树，如果树和左右儿子AABB包围盒都没有交点则说明不相交，如果和左右儿子AABB包围盒只有一个有相交则遍历对应儿子节点，如果和左右儿子AABB都相交先遍历交点近的儿子如果没有求得交点则遍历焦点远的儿子，如果有交点同样遍历焦点远的儿子，并选择左右交点较小的那个作为最终的结果。重复这个过程直到叶子节点，就转换为了场景元素(如这里的三角形)与光线的求交问题。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Hit</span><span class="params">(Ray&amp; r, <span class="type">float</span>&amp; t_min, <span class="type">float</span>&amp; t_max, HitRecord&amp; rec)</span></span>&#123;</span><br><span class="line">    <span class="comment">//判断与左右儿子包围盒是否相交</span></span><br><span class="line">    <span class="type">bool</span> is_left_hit = child[<span class="number">0</span>]-&gt;<span class="built_in">GetBoundingBox</span>()-&gt;<span class="built_in">HitTest</span>(r, t_min, t_max, rec_left);</span><br><span class="line">    <span class="type">bool</span> is_right_hit = child[<span class="number">1</span>]-&gt;<span class="built_in">GetBoundingBox</span>()-&gt;<span class="built_in">HitTest</span>(r, t_min, t_max, rec_left);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果都相交</span></span><br><span class="line">    <span class="keyword">if</span>(is_left_hit&amp;&amp;is_right_hit)&#123;</span><br><span class="line">        <span class="comment">//选择远近交点</span></span><br><span class="line">        <span class="type">int</span> near, far;</span><br><span class="line"><span class="keyword">if</span> (rec_left &lt; rec_right) near = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> near = <span class="number">1</span>;</span><br><span class="line">        far = <span class="number">1</span> - near;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果近相交</span></span><br><span class="line">        <span class="keyword">if</span> (child[near]-&gt;<span class="built_in">hit</span>(r, t_min, t_max, rec)) &#123;</span><br><span class="line"><span class="keyword">if</span> (rec.t &lt; t_hit[far])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//远儿子可能会有更近的三角形相交点</span></span><br><span class="line">HitRecord tp_far_rec;</span><br><span class="line"><span class="keyword">if</span> (child[far]-&gt;<span class="built_in">hit</span>(r, t_min, t_max, tp_far_rec) &amp;&amp; tp_far_rec.t &lt; rec.t) &#123;</span><br><span class="line">rec = tp_far_rec;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//如果近的不相交</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> child[far]-&gt;<span class="built_in">hit</span>(r, t_min, t_max, rec);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果只有一个相交</span></span><br><span class="line">    <span class="keyword">if</span>(is_left_hit) <span class="keyword">return</span> child[<span class="number">0</span>]-&gt;<span class="built_in">hit</span>(r, t_min, t_max, rec);</span><br><span class="line">    <span class="keyword">if</span>(is_right_hit) <span class="keyword">return</span> child[<span class="number">1</span>]-&gt;<span class="built_in">hit</span>(r, t_min, t_max, rec);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//如果都不相交</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>除了构建和遍历之外还有两个核心要点也就是光线与AABB包围盒的求交和与三角形的求交。与AABB的求交思路是计算光线与各个轴的交点k，取每个轴中k最大和最小的k，如果所有轴中最小值的最大值小于所有轴中最大值的最小值则说明则说明光线与包围盒相交，交点即为最小值的最大值。而三角形与光线的求交则可以参考wiki的代码实现（<a href="https://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm%EF%BC%89%EF%BC%8C%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF%E6%98%AF%E5%88%97%E5%87%BA$O+tD=(1-u-v)A+uB+vC$">https://en.wikipedia.org/wiki/Möller–Trumbore_intersection_algorithm），基本思路是列出$O+tD=(1-u-v)A+uB+vC$</a> 写成矩阵形式用克莱姆法则进行求解，在此之外检测光线是否平行于三角形以及交点是否落在三角形之外。</li></ul><p>（4）我们从相机出发对着每个像素值射出一条光线(由于像素本身有大小所有每次射出光线可以在该像素位置上下、左右<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.5</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-0.5,0.5]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">0.5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0.5</span><span class="mclose">]</span></span></span></span>)内偏移，并通过一系列计算得到了最终的颜色值，我们只需要将累加的颜色值除以总的spp数量，并进行适当的gamma校正即可得到最终的结果，对应实现在ImageBuffer中，并通过stbi_write_jpg将其输出为jpg格式的图片，当然也可以类似《raytracing in one weekend》的方法输出成PPM格式图片。</p><h2 id="四、渲染主循环和采样方法">四、渲染主循环和采样方法</h2><p>下面的伪代码给出了我们对于每个像素采样和渲染的循环，而循环的具体实现和相关技术在后续进行了详细地阐述和分析。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> bn=<span class="number">0</span>; ; bn++)&#123;</span><br><span class="line">    <span class="comment">//是否与场景相交</span></span><br><span class="line">    <span class="keyword">if</span>(!bvh_tree-&gt;<span class="built_in">hit</span>(r, min_hit_value, max_hit_value, rec)) <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//（1）如果与光源相交</span></span><br><span class="line">    <span class="keyword">if</span>(rec.mtl-&gt;mtl_type==<span class="string">&quot;Light&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_first_Intersect_light &amp;&amp; <span class="built_in">dot</span>(rec.n, r.dir)&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            color = color + factor * (rec.mtl)-&gt;Ke;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//上一次光的出射方向和这次光的入射方向相反</span></span><br><span class="line">    wo = -r.dir;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//（2）如果与玻璃材质相交</span></span><br><span class="line">    <span class="keyword">if</span>(rec.mtl-&gt;mtl_type==<span class="string">&quot;Glass&quot;</span>)&#123;</span><br><span class="line">        rec.mtl-&gt;<span class="built_in">scatter</span>(wo, wi, rec);</span><br><span class="line">        factor = factor*rec.mtl-&gt;<span class="built_in">bsdf</span>(wo, wi,rec);</span><br><span class="line">        r = <span class="built_in">Ray</span>(rec.p, wi);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//防止对于某点采样两次直接光照的flag</span></span><br><span class="line">    is_first_Intersect_light = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">dot</span>(rec.n, wo)&lt;<span class="number">0</span>) rec.n = -rec.n;</span><br><span class="line">    <span class="comment">//（3）多重重要性采样：采样光源+采样材质方向</span></span><br><span class="line">    <span class="comment">//先采样光源</span></span><br><span class="line">    <span class="type">float</span> light_pdf = light_list.<span class="built_in">SampleRay</span>(rec, light_rec, bvh_tree, wi);</span><br><span class="line">    <span class="keyword">if</span>(light_pdf &gt; epsilon)&#123;</span><br><span class="line">        <span class="comment">//得到材质对应的pdf</span></span><br><span class="line">        bsdf_pdf = rec.mtl-&gt;<span class="built_in">pdf</span>(wo, wi, rec);</span><br><span class="line">        <span class="keyword">if</span>(bsdf_pdf &gt; epsilon)&#123;</span><br><span class="line">            <span class="comment">//得到对应的bsdf系数，保持物理上能量守恒</span></span><br><span class="line">            bsdf_pdf_factor = rec.mtl-&gt;<span class="built_in">bsdf</span>(wo, wi, rec);</span><br><span class="line">            <span class="comment">//用平方权重加权</span></span><br><span class="line">            weight=light_pdf * light_pdf / (light_pdf * light_pdf + bsdf_pdf * bsdf_pdf);</span><br><span class="line">color += weight * (light_rec.mtl)-&gt;Ke * bsdf_pdf_factor * <span class="built_in">dot</span>(wi, rec.n) / light_pdf;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//再采样材质出射方向(用于更好地收敛高光项)</span></span><br><span class="line">    bsdf_pdf = rec.mtl-&gt;<span class="built_in">scatter</span>(wo, wi, rec);</span><br><span class="line">    <span class="keyword">if</span> (bsdf_pdf &gt; epsilon) &#123;</span><br><span class="line">        <span class="function">Ray <span class="title">r</span><span class="params">(rec.p, wi)</span></span>;</span><br><span class="line">        <span class="comment">//计算采样到对应光源的pdf</span></span><br><span class="line">light_pdf = light_list.<span class="built_in">pdf</span>(light_rec, bvh_tree, r);</span><br><span class="line">        <span class="keyword">if</span> (light_pdf &gt; epsilon) &#123;</span><br><span class="line">            <span class="comment">//得到对应的bsdf系数，保持物理上能量守恒</span></span><br><span class="line">            bsdf_pdf_factor = rec.mtl-&gt;<span class="built_in">bsdf</span>(wo, wi, rec);</span><br><span class="line">            <span class="comment">//同样平方加权</span></span><br><span class="line">            weight = bsdf_pdf * bsdf_pdf / (light_pdf * light_pdf + bsdf_pdf * bsdf_pdf);</span><br><span class="line">            color += weight * (light_rec.mtl)-&gt;Ke * bsdf_pdf_factor * <span class="built_in">dot</span>(wi, rec.n) / bsdf_pdf;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//（4）俄罗斯轮盘赌</span></span><br><span class="line">    <span class="keyword">if</span>(bn&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="type">int</span> which = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;<span class="number">3</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(factor[i]&gt;factor[which]) which = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">get_uniform_random</span>() &lt; factor[which]) factor = factor/factor[which];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（1）首先需要注意的是由于我们每次打到非光源物体都会对光源采样，这就意味着这次采样得到的光源是对于这点的直接光照光源，如果进入下一次bounce并且反弹过后的射线正好打到光源那么我们将终止循环且不计算该光源的贡献，不然的话对于该点来说直接光源会被计算两次。</p><p>（2）与玻璃材质相交时的处理较为简单，光线会变为折射光线或者反射光线，由于光路确定没有进行采样所以此时的pdf值为1。我们利用如下Schlick公式近似菲涅尔项，并随机一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>的数，如果小于该项则出射光线为反射大于该项则为折射(同时还需要考虑全反射的情况)。当光线反射时对应的bsdf值为1，而当光线折射时对应的bsdf值为玻璃材质的transmission项用于能量的衰减。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>R</mi><mn>0</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>R</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><msup><mo stretchy="false">)</mo><mn>5</mn></msup><mo separator="true">,</mo><msub><mi>R</mi><mn>0</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mfrac><mrow><msub><mi>η</mi><mi>i</mi></msub><mo>−</mo><msub><mi>η</mi><mi>t</mi></msub></mrow><mrow><msub><mi>η</mi><mi>i</mi></msub><mo>+</mo><msub><mi>η</mi><mi>t</mi></msub></mrow></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R(\theta)=R_0+(1-R_0)(1-cos\theta)^5,R_0=(\frac{\eta_i-\eta_t}{\eta_i+\eta_t})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">cos</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1408em;vertical-align:-0.8804em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>（3）通过多重重要性采样的方式可以更快地收敛高光项和diffuse项，其中的关键包括以下几个部分（为了统一wi指代的是交点与光源连接的方向，wo指代的是交点与物体连接的方向）。</p><ul><li>光源的采样：我们首先可以根据面积选择应该采样哪一个光源，面积越大采样到该光源的概率也就越大即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>d</mi><msub><mi>f</mi><mn>1</mn></msub><mo>=</mo><mfrac><msub><mi>A</mi><mi>i</mi></msub><msub><mi>A</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msub></mfrac></mrow><annotation encoding="application/x-tex">pdf_1=\frac{A_i}{A_{all}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3393em;vertical-align:-0.4509em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ll</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4509em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 选择了该光源后由于使用的光源均为三角形面片，可以通过如下方式在三角形上均匀随机采样一个点(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">a_1,a_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)是两个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>之间的随机数，而采样到该点的概率可以写作该三角形近似所占立体角分之一，即对应的立体角是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>A</mi><mi>i</mi></msub><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow><msup><mi>R</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding="application/x-tex">\frac{A_icos\theta}{R^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2412em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">cos</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span> 是采样光源点和交点连线与三角形法线的交点，因此采到该点的概率是其取倒数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>d</mi><msub><mi>f</mi><mn>2</mn></msub><mo>=</mo><mfrac><msup><mi>R</mi><mn>2</mn></msup><mrow><msub><mi>A</mi><mi>i</mi></msub><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">pdf_2=\frac{R^2}{A_icos\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.463em;vertical-align:-0.4451em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">cos</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，两者相乘即为采到该光源的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>d</mi><mi>f</mi><mo>=</mo><mfrac><msup><mi>R</mi><mn>2</mn></msup><mrow><msub><mi>A</mi><mrow><mi>a</mi><mi>l</mi><mi>l</mi></mrow></msub><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">pdf=\frac{R^2}{A_{all}cos\theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4688em;vertical-align:-0.4509em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ll</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight">cos</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4509em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> .</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msqrt><msub><mi>a</mi><mn>1</mn></msub></msqrt><mo stretchy="false">)</mo><mo>+</mo><mi>p</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">(</mo><msqrt><msub><mi>a</mi><mn>1</mn></msub></msqrt><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>p</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>∗</mo><mo stretchy="false">(</mo><msqrt><msub><mi>a</mi><mn>1</mn></msub></msqrt><mo>∗</mo><msub><mi>a</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p[0]*(1-\sqrt{a_1})+p[1]*(\sqrt{a_1}*(1-a_2))+p[2]*(\sqrt{a_1}*a_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2658em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7742em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7342em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2658em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2658em;"></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7742em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7342em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2658em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2658em;"></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7742em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7342em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2658em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li><p>材质采样：</p><ul><li>对于diffuse材质而言，由于Phong模型中会乘以一个光源方向和法线的cos项，因而采样的时候我们也按照半球上cos系数的采样方式，此时的pdf为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow><mi>π</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{cos\theta}{\pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">cos</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，采样方式是局部坐标系内 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo>=</mo><mn>2</mn><mi>π</mi><msub><mi>ϵ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>o</mi><mi>s</mi><msqrt><mrow><mn>1</mn><mo>−</mo><msub><mi>ϵ</mi><mn>2</mn></msub></mrow></msqrt></mrow><annotation encoding="application/x-tex">\phi=2\pi\epsilon_1,\theta=arcos\sqrt{1-\epsilon_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2078em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcos</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8322em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7922em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2078em;"><span></span></span></span></span></span></span></span></span></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> cos_phi = <span class="built_in">cosf</span>(<span class="built_in">get_uniform_random</span>(<span class="number">0</span>, <span class="number">2</span> * Pi));</span><br><span class="line"><span class="type">float</span> cos_theta = <span class="built_in">sqrtf</span>(<span class="number">1.0f</span> - <span class="built_in">get_uniform_random</span>());</span><br><span class="line"><span class="type">float</span> sin_phi = <span class="built_in">sqrtf</span>(<span class="number">1.0f</span> - cos_phi * cos_phi);</span><br><span class="line"><span class="type">float</span> sin_theta = <span class="built_in">sqrtf</span>(<span class="number">1.0f</span> - cos_theta * cos_theta);</span><br><span class="line"><span class="function">vec3 <span class="title">p_local</span><span class="params">(sin_theta * cos_phi, sin_theta * sin_phi, cos_theta)</span></span>;</span><br><span class="line"></span><br><span class="line">wi = <span class="built_in">local2world</span>(p_local, rec.n);</span><br><span class="line">pdf = cos_theta / Pi;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里从一个随机的法线(已知法线，再随机一个垂直向量，由这两个向量计算第三个向量)坐标系转换为世界坐标系</span></span><br><span class="line"><span class="function">vec3 <span class="title">local2world</span><span class="params">(vec3&amp; p_local, vec3&amp; axis_z)</span> </span>&#123;</span><br><span class="line">vec3 axis_x, axis_y;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">axis_y = <span class="built_in">vec3</span>(<span class="built_in">get_uniform_random</span>(<span class="number">-1</span>, <span class="number">1</span>), <span class="built_in">get_uniform_random</span>(<span class="number">-1</span>, <span class="number">1</span>), <span class="built_in">get_uniform_random</span>(<span class="number">-1</span>, <span class="number">1</span>));</span><br><span class="line">&#125; <span class="keyword">while</span> (glm::<span class="built_in">length</span>(<span class="built_in">cross</span>(axis_y, axis_z)) &lt; <span class="number">0.0000001</span>);</span><br><span class="line">axis_y = <span class="built_in">normalize</span>(<span class="built_in">cross</span>(axis_y, axis_z));</span><br><span class="line">axis_x = <span class="built_in">normalize</span>(<span class="built_in">cross</span>(axis_y, axis_z));</span><br><span class="line">mat3 l2w = <span class="built_in">mat3</span>(axis_x, axis_y, axis_z);</span><br><span class="line"><span class="keyword">return</span> l2w * p_local;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>对于specular材质而言，这里需要考虑使用的是Phong模型(<a href="https://www.cs.princeton.edu/courses/archive/fall16/cos526/papers/importance.pdf">https://www.cs.princeton.edu/courses/archive/fall16/cos526/papers/importance.pdf</a>)还是Bling Phong模型(<a href="http://farbrausch.de/~fg/index.html">http://farbrausch.de/~fg/index.html</a>)前者按照光线真实视线方向和实际视线方向的夹角和高光系数Ns采样，后者按照半角向量与法线的夹角和高光系数Ns采样。采样方式是局部坐标系内<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo>=</mo><mn>2</mn><mi>π</mi><msub><mi>ϵ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>θ</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>ϵ</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mrow><mi>N</mi><mi>s</mi><mo>+</mo><mn>2</mn></mrow></mfrac></msup></mrow><annotation encoding="application/x-tex">\phi=2\pi\epsilon_1,\theta=arcos(1-\epsilon_2)^{\frac{1}{Ns+2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">rcos</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2312em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-3.3902em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4035em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> cos_phi = <span class="built_in">cosf</span>(<span class="built_in">get_uniform_random</span>(<span class="number">0</span>, <span class="number">2</span> * Pi));</span><br><span class="line"><span class="type">float</span> cos_theta = <span class="built_in">powf</span>(<span class="number">1</span> - <span class="built_in">get_uniform_random</span>(), <span class="number">1.0f</span> / (Ns + <span class="number">2</span>));</span><br><span class="line"><span class="type">float</span> sin_phi = <span class="built_in">sqrtf</span>(<span class="number">1.0f</span> - cos_phi * cos_phi);</span><br><span class="line"><span class="type">float</span> sin_theta = <span class="built_in">sqrtf</span>(<span class="number">1.0f</span> - cos_theta * cos_theta);</span><br><span class="line"><span class="function">vec3 <span class="title">p_local</span><span class="params">(sin_theta * cos_phi, sin_theta * sin_phi, cos_theta)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Phong模型</span></span><br><span class="line"><span class="keyword">if</span> (PhongOrBling == <span class="number">0</span>) &#123;</span><br><span class="line">    vec3 true_wi = <span class="number">2</span> * <span class="built_in">dot</span>(wo, rec.n) * rec.n - wo;</span><br><span class="line">    wi = <span class="built_in">local2world</span>(p_local, true_wi);</span><br><span class="line">    pdf = (Ns + <span class="number">1</span>) / (<span class="number">2</span> * Pi) * <span class="built_in">powf</span>(cos_theta, Ns);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Bling Phong模型</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    vec3 half_vector = <span class="built_in">local2world</span>(p_local, rec.n);</span><br><span class="line">    <span class="type">float</span> cos_half_vector = <span class="built_in">dot</span>(half_vector, wo);</span><br><span class="line">    wi = <span class="number">2.0f</span> * cos_half_vector * half_vector - wo;</span><br><span class="line">    pdf = (Ns + <span class="number">2</span>) / (<span class="number">2</span> * Pi) * <span class="built_in">powf</span>(cos_theta, Ns+<span class="number">1</span>);</span><br><span class="line">    pdf = pdf / (<span class="number">4</span> * cos_half_vector);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pdf;</span><br></pre></td></tr></table></figure></li><li><p>材质的bsdf：为了保证phong/Bling-Phong模型的物理能量守恒性，还需要乘以一个bsdf系数，对于diffuse项这个系数是一个常量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>d</mi></msub><mi mathvariant="normal">/</mi><mi>π</mi></mrow><annotation encoding="application/x-tex">K_d/\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span> 而对于specular项根据使用的Phong模型和Bling Phong模型的不同，按照上述参考资料分别表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5</mn><mi>K</mi><mi>s</mi><mo stretchy="false">(</mo><mi>N</mi><mi>s</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>d</mi><mi>o</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>o</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>o</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mi>N</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">0.5Ks(Ns+2)(dot(w_{otrue},w_o))^{Ns}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.5</span><span class="mord mathnormal">Ks</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 以及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mo stretchy="false">(</mo><mi>N</mi><mi>s</mi><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>N</mi><mi>s</mi><mo>+</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><mrow><mn>8</mn><mi>π</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>N</mi><mi>s</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>+</mo><mi>N</mi><mi>s</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>d</mi><mi>o</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mrow><mi>h</mi><mi>a</mi><mi>l</mi><mi>f</mi><mi>v</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mrow><mi>N</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{(Ns+2)(Ns+4)}{8\pi(2^{-Ns/2}+Ns)}dot(n_{halfvector},n)^{Ns}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5704em;vertical-align:-0.5604em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6146em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5604em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ha</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">ec</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">or</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 。需要注意的是可以使用Bling-Phong模型计算bsdf而用Phong模型进行采样，因为采样的方式只会影响收敛的速度并不会影响结果(也就是均值不变，方差变化)。</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vec3 res_kd = Kd;</span><br><span class="line"><span class="keyword">if</span> (is_texture) res_kd = texture-&gt;<span class="built_in">Get</span>(rec.uv);</span><br><span class="line">vec3 factor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Phong模型</span></span><br><span class="line"><span class="keyword">if</span>(PhongOrBling==<span class="number">0</span>)&#123;</span><br><span class="line">    vec3 true_wo = <span class="number">2</span> * <span class="built_in">dot</span>(wi, rec.n) * rec.n - wi;</span><br><span class="line">    factor = res_kd + <span class="number">0.5f</span> * Ks * (Ns + <span class="number">2</span>) * <span class="built_in">powf</span>(<span class="built_in">dot</span>(true_wo, wo), Ns);</span><br><span class="line">    factor = factor / Pi;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Bling Phong模型</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    vec3 half_vector = <span class="built_in">normalize</span>(wo + wi);</span><br><span class="line">    factor = res_kd + <span class="number">0.125f</span> * Ks * (Ns + <span class="number">2</span>) * (Ns + <span class="number">4</span>)  * <span class="built_in">powf</span>(<span class="built_in">dot</span>(half_vector, rec.n), Ns) / (Ns + <span class="built_in">powf</span>(<span class="number">2</span>, -Ns / <span class="number">2</span>));</span><br><span class="line">    factor = factor / Pi;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> factor;</span><br></pre></td></tr></table></figure><p>（4）为了保证能量的不损失而且光线不会一直弹射下去，可以通过俄罗斯轮盘赌的方式在每次光线弹射后根据当前的能量系数factor决定光线是否下次的弹射，如果继续弹射那么对应的系数factor = factor/p这样可以保持最终计算结果的期望与无限次弹射的期望值相同，从而保证了能量的守恒性。</p>]]></content>
    
    
    <summary type="html">使用蒙特卡洛方法实现路径追踪算法，构建BVH树作为空间加速结构，支持场景导入(.obj+.xml)，实现Blinn-Phong BRDF材质模型并支持简单折射</summary>
    
    
    
    
    <category term="渲染" scheme="https://nko-y.github.io/tags/%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>render02</title>
    <link href="https://nko-y.github.io/2024/06/18/render02/"/>
    <id>https://nko-y.github.io/2024/06/18/render02/</id>
    <published>2024-06-18T06:23:35.000Z</published>
    <updated>2024-07-14T06:33:27.364Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>【游戏】彼方</title>
    <link href="https://nko-y.github.io/2024/05/22/game01/"/>
    <id>https://nko-y.github.io/2024/05/22/game01/</id>
    <published>2024-05-22T06:12:01.000Z</published>
    <updated>2024-07-14T08:53:50.214Z</updated>
    
    <content type="html"><![CDATA[<!-- <iframe src="//player.bilibili.com/player.html?isOutside=true&aid=1203287467&bvid=BV1DF4m1A7Gb&cid=1510742589&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe> --><video>  <source src="/game/bifang.mp4" type="video/mp4"></video>]]></content>
    
    
    <summary type="html">2023网易雷火开发大赛二等奖作品。世间万物皆蕴含无限状态，拨动象征着概率的时钟，探索隐秘的世界</summary>
    
    
    
    
    <category term="游戏" scheme="https://nko-y.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>game02</title>
    <link href="https://nko-y.github.io/2024/05/21/game02/"/>
    <id>https://nko-y.github.io/2024/05/21/game02/</id>
    <published>2024-05-21T06:23:44.000Z</published>
    <updated>2024-07-14T06:33:21.390Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
